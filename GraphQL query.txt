1. Query Star Count, Watch Count for a given public repo name

{
  "queryString": "is:public NodeJS in:name"
}


query listRepos($queryString: String!){
  search(query: $queryString, type: REPOSITORY, first:20) {
    repositoryCount
    pageInfo {
      endCursor
      startCursor
    }
    edges {
      node {
        ... on Repository {
          name
	  id	
          watchers{
            totalCount
          }
          stargazers{
            totalCount
          }
          url
        }
      }
    }
  }
}

2.Mutation

#To search the Repo
query searchRepoID{
  organization(login: "the-road-to-learn-react") {
    name
    url
    repository(name: "the-road-to-learn-react") {
      id
      name
    }
  }
}


#To add star for a given Repo ID
mutation AddStarToRepo($repositoryId: ID!) {
  addStar(input: { starrableId: $repositoryId }) {
    starrable {
      id
      viewerHasStarred
    }
  }
}


#To remove star for a given Repo ID
mutation RemoveStarRepo($repositoryId: ID!){
    removeStar(input: {starrableId:$repositoryId }){
    starrable{
      id
      viewerHasStarred
    }
  }
  
}

#To update watcher for a given Repo ID
mutation UpdateWatcher($repositoryId: ID!, $state: SubscriptionState!){
  updateSubscription(input:{subscribableId:$repositoryId,state:$state}){
    subscribable{
      id
      viewerSubscription
    }
  }
  
}

Data Pass:

{
  "repositoryId": "MDEwOlJlcG9zaXRvcnk2MzM1MjkwNw==",
  "state":"UNSUBSCRIBED"
}
